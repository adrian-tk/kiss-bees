MCU=attiny412
#/CC=avr-gcc

CC = /opt/avr/avr8-gnu-toolchain-linux_x86_64/bin/avr-gcc

OBJCOPY=/opt/avr/avr8-gnu-toolchain-linux_x86_64/bin/avr-objcopy
TARGET=uart_send
SRC=uart_send.c
PORT=/dev/ttyACM0
CFLAGS=-x c -funsigned-char -funsigned-bitfields -DDEBUG  -O1 -ffunction-sections -fdata-sections -fpack-struct -fshort-enums -g2 -Wall -mmcu=${MCU} -c -std=gnu99 -MD -MP -MF "${TARGET}.d" -MT "${TARGET}.d" -MT "${TARGET}.o"   -o  "${TARGET}.o"  "${SRC}"
LFLAGS=-o ${TARGET}.elf  ${TARGET}.o  -Wl,-Map='usart_t412.map' -Wl,--start-group -Wl,-lm  -Wl,--end-group -Wl,--gc-sections -mmcu=${MCU}

all:

	${CC} ${CFLAGS}
	${CC} ${LFLAGS}
	${OBJCOPY} -O ihex -R .eeprom -R .fuse -R .lock -R .signature -R .user_signatures   "${TARGET}.elf"  "${TARGET}.hex"
	

#	python3 /home/build/pyupdi/pyupdi.py -d tiny814 -c  ${PORT} -f  "${TARGET}.hex "

flash:
	python3 /home/build/pyupdi/pyupdi.py -d tiny814 -c ${PORT} -f  "${TARGET}.hex "

clean:
	rm -f *.o *.hex *.elf
	python3 /home/build/pyupdi/pyupdi.py -d tiny814 -c ${PORT}  -e
build:
	${CC} ${CFLAGS}
	${CC} ${LFLAGS}
